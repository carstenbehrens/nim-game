{"version":3,"sources":["components/App/style.js","components/Match/style.js","components/Match/index.js","components/Hud/style.js","components/Hud/index.js","utils/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["GlobalStyle","createGlobalStyle","GameContainer","styled","div","MatchesContainer","MatchContainer","MatchStick","props","visible","MatchTip","number","onClick","HudContainer","FinishTurn","button","isPlayer","handleFinishTurn","matches","getSelectedMatches","filter","match","length","selectedAllMatches","getInitialState","total","initialArray","i","push","reducer","state","action","type","tmp","newMatchesState","isWaiting","isGameOver","Error","App","useReducer","dispatch","useEffect","includes","arr","selectMatches","numberOfMatches","setTimeout","alert","handleClickMatch","totalSelectedMatches","isLegalMove","map","el","Match","key","Hud","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.54db97a5.chunk.js","sourcesContent":["import styled, { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed, \n  figure, figcaption, footer, header, hgroup, \n  menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure, \n  footer, header, hgroup, menu, nav, section {\n    display: block;\n  }\n  body {\n    line-height: 1;\n  }\n  ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n\n  body {\n    height: 100vh;\n    width: 100vw;\n    overflow: hidden;\n  }\n`;\n\nexport const GameContainer = styled.div`\n\theight: 100vh;\n\twidth: 100vw;\n  background: linear-gradient(to bottom, rgba(255,255,255,0.15) 0%, rgba(0,0,0,0.15) 100%), radial-gradient(at top center, rgba(255,255,255,0.40) 0%, rgba(0,0,0,0.40) 120%) #989898; \n  background-blend-mode: multiply,multiply;\n\tdisplay: flex;\n\talign-items: center;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport const MatchesContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\theight: 70%;\n\twidth: 90%;\n\n\t@media (max-width: 900px) {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: repeat(3, 1fr);\n\t\tplace-items: center;\n  }\n  \n  @media (max-width: 600px) {\n    width: 100%;\n  }\n\n  @media (max-width: 400px) {\n    grid-template-columns: repeat(4, 1fr); \n  }\n`;","import styled from 'styled-components';\n\nexport const MatchContainer = styled.div`\n\theight: 8rem;\n\twidth: 4rem;\n\tcursor: pointer;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background: linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(255,255,255,0.1) 100%);\n  border-radius: 3rem;\n\n  @media (min-width: 900px) {\n    &:hover {\n      box-shadow: 0px 3px 46px -17px rgba(0,0,0,0.3);\n      background: linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(255,255,255,0.3) 100%);\n    }\n  }\n  \n  @media (max-width: 600px) {\n    height: 90%;\n  }\n`;\n\nexport const MatchStick = styled.div`\n\theight: 5rem;\n\twidth: 0.6rem;\n\tbackground: rgb(224,175,76);\n  background: linear-gradient(270deg, rgba(224,175,76,1) 0%, rgba(224,175,76,1) 50%, rgba(230,186,102,1) 50%, rgba(237,201,136,1) 100%);\n  cursor: pointer;\n  opacity: ${props => props.visible ? '100' : '0'};\n`;\n\nexport const MatchTip = styled.div`\n  height: 1.4rem;\n  width: 1rem;\n  border-radius: 40%;\n  background: rgb(89,21,12);\n  background: linear-gradient(126deg, rgba(89,21,12,1) 0%, rgba(238,141,101,1) 0%, rgba(193,104,66,1) 37%, rgba(213,49,28,1) 39%, rgba(71,19,12,1) 100%);\n  opacity: ${props => props.visible ? '100' : '0'};\n`\n","import React from 'react';\nimport { MatchContainer, MatchTip, MatchStick } from './style';\n\nexport default ({ visible, number, onClick }) => {\n\treturn (\n\t\t<MatchContainer onClick={() => onClick(number)}>\n\t\t\t<MatchTip visible={visible} />\n\t\t\t<MatchStick visible={visible} />\n\t\t</MatchContainer>\n\t);\n};\n","import styled from 'styled-components'\n\nexport const HudContainer = styled.div`\n  height: 20%;\n\twidth: 100%;\n\tcolor: white;\n\tfont-size: 2rem;\n\tdisplay: flex;\n\talign-items: center;\n\tflex-direction: column;\n\tjustify-content: space-around;\n`;\n\nexport const FinishTurn = styled.button`\n\theight: 4rem;\n\twidth: 8rem;\n\tcolor: white;\n\tbackground: none;\n\tfont-weight: bold;\n\tcursor: pointer;\n\ttext-transform: uppercase;\n`;","import React from 'react';\nimport { HudContainer, FinishTurn} from './style'\n\nexport default ({ isPlayer, handleFinishTurn, matches }) => {\n\treturn (\n\t\t<HudContainer>\n\t\t\t<FinishTurn onClick={() => handleFinishTurn(matches)}>\n\t\t\t\tFinish Turn\n\t\t\t</FinishTurn>\n\t\t\t<p>Player: </p>\n\t\t\t{isPlayer ? 'User' : 'Computer'}\n\t\t</HudContainer>\n\t);\n};\n","/**\n * Checks if the current move (selected matches) is legal\n * @param {Array} matches\n * @returns {Boolean} - True if legal\n */\nexport const isLegalMove = matches => {\n\tconst totalSelectedMatches = getSelectedMatches(matches);\n\treturn (\n\t\ttotalSelectedMatches > 0 &&\n\t\ttotalSelectedMatches < 4 &&\n\t\t!selectedAllMatches(matches)\n\t);\n};\n\n/**\n * Get the total amount of matches that are selected\n * @param {Array} matches\n * @returns {Number} - Number of selected elements\n */\nexport const getSelectedMatches = matches =>\n\tmatches.filter(match => match === true).length;\n\n/**\n * Checks if all matches are selected\n * @param {Array} matches\n * @returns {Boolean} - Returns true if all matches are selected\n */\nexport const selectedAllMatches = matches => {\n\treturn (\n\t\tgetSelectedMatches(matches) ===\n\t\tmatches.length\n\t);\n};\n\n/**\n * Checks if the game is over - (When only one match is left)\n * @param {Array} matches\n * @return {Boolean} - Returns true if the game is over\n */\nexport const isGameOver = matches => {\n\treturn matches.length <= 1;\n};\n\n/**\n * Selects the matches (false -> true) so that they can be removed later\n * @param {Number} number\n * @param {Array} arr\n * @returns {Array} - The new array\n */\nexport const selectMatches = (number, arr) => {\n\tfor (let i = 0; i < number; i++) {\n\t\tarr[i] = !arr[i];\n\t}\n\treturn arr;\n};\n\n/**\n * Returns the max number of matches that can be selected\n * @param {Array} matches\n * @returns {Number} - max number that can be selected\n */\nexport const getMaxNumberToSelect = matches => {\n\tconst length = matches.length;\n\treturn length <= 3 ? length - 1 : 3;\n};\n\n/**\n * Gets the initial state\n * @param {Number} total number of entries\n * @returns {Array} - Array with initial entries\n */\nexport const getInitialState = (total = 13) => {\n  let initialArray = []\n  for (let i = 0; i < total; i++) {\n    initialArray.push(false)\n  }\n  return initialArray;\n}\n\n/**\n * Returns the number of matches that the computer should remove\n * @param {Number} numberOfMatches\n * @returns {Number} - Numbers of matches to remove\n */\nexport const getBestMove = numberOfMatches => {\n\tif (numberOfMatches === 2) {\n\t\treturn 1;\n\t}\n\n\tif (numberOfMatches === 3) {\n\t\treturn 2;\n\t}\n\t// If the remainder of numberOfMatches % 4 is 1 we return 3 so the next number is even again\n\t// If the remainder of numberOfMatches % 4 is 0 we return 2 so the next number is even again\n\treturn !!numberOfMatches % 4 ? 3 : 2;\n};\n","import React, {useEffect, useReducer} from 'react';\nimport {GameContainer, MatchesContainer, GlobalStyle} from './style';\nimport Match from '../Match';\nimport Hud from '../Hud';\nimport {\n\tisLegalMove,\n\tisGameOver,\n\tgetInitialState,\n\tselectMatches,\n  getBestMove\n} from '../../utils';\n\nexport const reducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase 'SWITCH_PLAYER':\n\t\t\treturn {...state, isPlayer: !state.isPlayer};\n\t\tcase 'SELECT_MATCH':\n\t\t\tconst tmp = state.matches;\n\t\t\ttmp[action.number] = !tmp[action.number];\n\t\t\treturn {...state, matches: tmp};\n\t\tcase 'SET_MATCHES':\n\t\t\treturn {...state, matches: action.newMatchesState}\n\t\tcase 'REMOVE_SELECTED':\n\t\t\treturn {...state, matches: state.matches.filter(match => match === false)}\n\t\tcase 'SWITCH_IS_WAITING':\n\t\t\treturn {...state, isWaiting: !state.isWaiting}\n\t\tcase 'SET_IS_GAME_OVER':\n\t\t\treturn {...state, isGameOver: true}\n\t\tcase 'RESET_GAME':\n\t\t\treturn {isPlayer: !state.isPlayer, matches: [...getInitialState()], isWaiting: false, isGameOver: false}\n\t\tdefault:\n\t\t\tthrow new Error();\n\t}\n};\n\nconst App = () => {\n\tconst [state, dispatch] =\n\t\tuseReducer(reducer,\n\t\t\t{\n\t\t\t\tisPlayer: true,\n\t\t\t\tmatches: getInitialState(),\n\t\t\t\tisWaiting: false,\n\t\t\t\tisGameOver: false\n\t\t\t});\n\n\tuseEffect(() => {\n\t\t// Computer move -> Select Matches\n\t\tif (isGameOver(state.matches)) {\n\t\t\tdispatch({type: 'SET_IS_GAME_OVER'})\n\t\t} else {\n\t\t\tif (!state.isPlayer && !state.matches.includes(true) && !state.isWaiting) {\n\t\t\t\tconst newMatchesState = selectMatches(\n\t\t\t\t\tgetBestMove(state.matches.length),\n\t\t\t\t\tstate.matches\n\t\t\t\t);\n\t\t\t\tdispatch({type: 'SET_MATCHES', newMatchesState})\n\t\t\t\tdispatch({type: 'SWITCH_IS_WAITING'})\n\t\t\t}\n\n\t\t\t// Wait for 1 second before removing the matches for better UX\n\t\t\tif (!state.isPlayer && !state.isWaiting) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\thandleFinishTurn(state.matches);\n\t\t\t\t\tdispatch({type: 'SWITCH_IS_WAITING'})\n\t\t\t\t}, 1000);\n\t\t\t}\n\t\t}\n\t}, [state.isPlayer, state.isWaiting, state.matches])\n\n\tuseEffect(() => {\n\t\tif (state.isGameOver) {\n\t\t\talert(`GAME OVER: ${state.isPlayer ? 'Computer' : 'Player'} Won.`)\n\t\t\tdispatch({type: 'RESET_GAME'})\n\t\t}\n\t}, [state.isGameOver, state.isPlayer])\n\n\tconst handleClickMatch = number => {\n\t\tdispatch({type: 'SELECT_MATCH', number})\n\t};\n\n\tconst handleFinishTurn = matches => {\n\t\tif (isLegalMove(matches)) {\n\t\t\tdispatch({type: 'REMOVE_SELECTED'});\n\t\t\tdispatch({type: 'SWITCH_PLAYER'});\n\t\t} else {\n\t\t\talert('Please select more then 1 and less then 3 matches');\n\t\t}\n\t};\n\n\treturn (\n\t\t<GameContainer>\n\t\t\t<GlobalStyle />\n\t\t\t<MatchesContainer>\n\t\t\t\t{state.matches.map((el, i) => (\n\t\t\t\t\t<Match\n\t\t\t\t\t\tvisible={!el}\n\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\tnumber={i}\n\t\t\t\t\t\tonClick={handleClickMatch}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</MatchesContainer>\n\t\t\t<Hud\n\t\t\t\thandleFinishTurn={handleFinishTurn}\n\t\t\t\tisPlayer={state.isPlayer}\n\t\t\t\tmatches={state.matches}\n\t\t\t/>\n\t\t</GameContainer>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}