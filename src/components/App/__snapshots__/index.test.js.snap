// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App matches snapshot 1`] = `
<App>
  <styled.div>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "kWOKpO",
            "rules": Array [
              "
	height: 100vh;
	width: 100vw;
	background: #1b2d2a;
	display: flex;
	align-items: center;
  flex-direction: column;
  justify-content: space-between;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "usesTheme": false,
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="sc-bdVaJa kWOKpO"
      >
        <GlobalStyleComponent />
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "gHRgEM",
                  "rules": Array [
                    "
	display: flex;
	justify-content: space-between;
	align-items: center;
	height: 70%;
	width: 90%;

	@media (max-width: 900px) {
		display: grid;
		grid-template-columns: repeat(3, 1fr);
		place-items: center;
  }
  
  @media (max-width: 600px) {
    width: 100%;
  }
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": "div",
                "toString": [Function],
                "usesTheme": false,
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="sc-bwzfXH gHRgEM"
            >
              <_default
                key="0"
                matchNumber={0}
                onClick={[Function]}
                visible={true}
              >
                <styled.div
                  onClick={[Function]}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "egiyvg",
                          "rules": Array [
                            "
	height: 8rem;
	width: 4rem;
	cursor: pointer;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: #243d39;

  @media (min-width: 900px) {
    &:hover {
      background: #335751;
    }
  }
  
  @media (max-width: 600px) {
    height: 90%;
  }
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "usesTheme": false,
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                  >
                    <div
                      className="sc-htpNat egiyvg"
                      onClick={[Function]}
                    >
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-ifAKCX",
                                "isStatic": false,
                                "lastClassName": "ggpBGU",
                                "rules": Array [
                                  "
  height: 1rem;
  width: 1rem;
  background: red;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-ifAKCX",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-ifAKCX ggpBGU"
                          />
                        </StyledComponent>
                      </styled.div>
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bxivhb",
                                "isStatic": false,
                                "lastClassName": "kljkxx",
                                "rules": Array [
                                  "
	height: 5rem;
	width: 1rem;
	background: #915535;
  cursor: pointer;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bxivhb",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-bxivhb kljkxx"
                          />
                        </StyledComponent>
                      </styled.div>
                    </div>
                  </StyledComponent>
                </styled.div>
              </_default>
              <_default
                key="1"
                matchNumber={1}
                onClick={[Function]}
                visible={true}
              >
                <styled.div
                  onClick={[Function]}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "egiyvg",
                          "rules": Array [
                            "
	height: 8rem;
	width: 4rem;
	cursor: pointer;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: #243d39;

  @media (min-width: 900px) {
    &:hover {
      background: #335751;
    }
  }
  
  @media (max-width: 600px) {
    height: 90%;
  }
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "usesTheme": false,
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                  >
                    <div
                      className="sc-htpNat egiyvg"
                      onClick={[Function]}
                    >
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-ifAKCX",
                                "isStatic": false,
                                "lastClassName": "ggpBGU",
                                "rules": Array [
                                  "
  height: 1rem;
  width: 1rem;
  background: red;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-ifAKCX",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-ifAKCX ggpBGU"
                          />
                        </StyledComponent>
                      </styled.div>
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bxivhb",
                                "isStatic": false,
                                "lastClassName": "kljkxx",
                                "rules": Array [
                                  "
	height: 5rem;
	width: 1rem;
	background: #915535;
  cursor: pointer;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bxivhb",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-bxivhb kljkxx"
                          />
                        </StyledComponent>
                      </styled.div>
                    </div>
                  </StyledComponent>
                </styled.div>
              </_default>
              <_default
                key="2"
                matchNumber={2}
                onClick={[Function]}
                visible={true}
              >
                <styled.div
                  onClick={[Function]}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "egiyvg",
                          "rules": Array [
                            "
	height: 8rem;
	width: 4rem;
	cursor: pointer;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: #243d39;

  @media (min-width: 900px) {
    &:hover {
      background: #335751;
    }
  }
  
  @media (max-width: 600px) {
    height: 90%;
  }
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "usesTheme": false,
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                  >
                    <div
                      className="sc-htpNat egiyvg"
                      onClick={[Function]}
                    >
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-ifAKCX",
                                "isStatic": false,
                                "lastClassName": "ggpBGU",
                                "rules": Array [
                                  "
  height: 1rem;
  width: 1rem;
  background: red;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-ifAKCX",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-ifAKCX ggpBGU"
                          />
                        </StyledComponent>
                      </styled.div>
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bxivhb",
                                "isStatic": false,
                                "lastClassName": "kljkxx",
                                "rules": Array [
                                  "
	height: 5rem;
	width: 1rem;
	background: #915535;
  cursor: pointer;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bxivhb",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-bxivhb kljkxx"
                          />
                        </StyledComponent>
                      </styled.div>
                    </div>
                  </StyledComponent>
                </styled.div>
              </_default>
              <_default
                key="3"
                matchNumber={3}
                onClick={[Function]}
                visible={true}
              >
                <styled.div
                  onClick={[Function]}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "egiyvg",
                          "rules": Array [
                            "
	height: 8rem;
	width: 4rem;
	cursor: pointer;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: #243d39;

  @media (min-width: 900px) {
    &:hover {
      background: #335751;
    }
  }
  
  @media (max-width: 600px) {
    height: 90%;
  }
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "usesTheme": false,
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                  >
                    <div
                      className="sc-htpNat egiyvg"
                      onClick={[Function]}
                    >
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-ifAKCX",
                                "isStatic": false,
                                "lastClassName": "ggpBGU",
                                "rules": Array [
                                  "
  height: 1rem;
  width: 1rem;
  background: red;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-ifAKCX",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-ifAKCX ggpBGU"
                          />
                        </StyledComponent>
                      </styled.div>
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bxivhb",
                                "isStatic": false,
                                "lastClassName": "kljkxx",
                                "rules": Array [
                                  "
	height: 5rem;
	width: 1rem;
	background: #915535;
  cursor: pointer;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bxivhb",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-bxivhb kljkxx"
                          />
                        </StyledComponent>
                      </styled.div>
                    </div>
                  </StyledComponent>
                </styled.div>
              </_default>
              <_default
                key="4"
                matchNumber={4}
                onClick={[Function]}
                visible={true}
              >
                <styled.div
                  onClick={[Function]}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "egiyvg",
                          "rules": Array [
                            "
	height: 8rem;
	width: 4rem;
	cursor: pointer;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: #243d39;

  @media (min-width: 900px) {
    &:hover {
      background: #335751;
    }
  }
  
  @media (max-width: 600px) {
    height: 90%;
  }
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "usesTheme": false,
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                  >
                    <div
                      className="sc-htpNat egiyvg"
                      onClick={[Function]}
                    >
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-ifAKCX",
                                "isStatic": false,
                                "lastClassName": "ggpBGU",
                                "rules": Array [
                                  "
  height: 1rem;
  width: 1rem;
  background: red;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-ifAKCX",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-ifAKCX ggpBGU"
                          />
                        </StyledComponent>
                      </styled.div>
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bxivhb",
                                "isStatic": false,
                                "lastClassName": "kljkxx",
                                "rules": Array [
                                  "
	height: 5rem;
	width: 1rem;
	background: #915535;
  cursor: pointer;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bxivhb",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-bxivhb kljkxx"
                          />
                        </StyledComponent>
                      </styled.div>
                    </div>
                  </StyledComponent>
                </styled.div>
              </_default>
              <_default
                key="5"
                matchNumber={5}
                onClick={[Function]}
                visible={true}
              >
                <styled.div
                  onClick={[Function]}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "egiyvg",
                          "rules": Array [
                            "
	height: 8rem;
	width: 4rem;
	cursor: pointer;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: #243d39;

  @media (min-width: 900px) {
    &:hover {
      background: #335751;
    }
  }
  
  @media (max-width: 600px) {
    height: 90%;
  }
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "usesTheme": false,
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                  >
                    <div
                      className="sc-htpNat egiyvg"
                      onClick={[Function]}
                    >
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-ifAKCX",
                                "isStatic": false,
                                "lastClassName": "ggpBGU",
                                "rules": Array [
                                  "
  height: 1rem;
  width: 1rem;
  background: red;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-ifAKCX",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-ifAKCX ggpBGU"
                          />
                        </StyledComponent>
                      </styled.div>
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bxivhb",
                                "isStatic": false,
                                "lastClassName": "kljkxx",
                                "rules": Array [
                                  "
	height: 5rem;
	width: 1rem;
	background: #915535;
  cursor: pointer;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bxivhb",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-bxivhb kljkxx"
                          />
                        </StyledComponent>
                      </styled.div>
                    </div>
                  </StyledComponent>
                </styled.div>
              </_default>
              <_default
                key="6"
                matchNumber={6}
                onClick={[Function]}
                visible={true}
              >
                <styled.div
                  onClick={[Function]}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "egiyvg",
                          "rules": Array [
                            "
	height: 8rem;
	width: 4rem;
	cursor: pointer;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: #243d39;

  @media (min-width: 900px) {
    &:hover {
      background: #335751;
    }
  }
  
  @media (max-width: 600px) {
    height: 90%;
  }
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "usesTheme": false,
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                  >
                    <div
                      className="sc-htpNat egiyvg"
                      onClick={[Function]}
                    >
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-ifAKCX",
                                "isStatic": false,
                                "lastClassName": "ggpBGU",
                                "rules": Array [
                                  "
  height: 1rem;
  width: 1rem;
  background: red;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-ifAKCX",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-ifAKCX ggpBGU"
                          />
                        </StyledComponent>
                      </styled.div>
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bxivhb",
                                "isStatic": false,
                                "lastClassName": "kljkxx",
                                "rules": Array [
                                  "
	height: 5rem;
	width: 1rem;
	background: #915535;
  cursor: pointer;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bxivhb",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-bxivhb kljkxx"
                          />
                        </StyledComponent>
                      </styled.div>
                    </div>
                  </StyledComponent>
                </styled.div>
              </_default>
              <_default
                key="7"
                matchNumber={7}
                onClick={[Function]}
                visible={true}
              >
                <styled.div
                  onClick={[Function]}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "egiyvg",
                          "rules": Array [
                            "
	height: 8rem;
	width: 4rem;
	cursor: pointer;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: #243d39;

  @media (min-width: 900px) {
    &:hover {
      background: #335751;
    }
  }
  
  @media (max-width: 600px) {
    height: 90%;
  }
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "usesTheme": false,
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                  >
                    <div
                      className="sc-htpNat egiyvg"
                      onClick={[Function]}
                    >
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-ifAKCX",
                                "isStatic": false,
                                "lastClassName": "ggpBGU",
                                "rules": Array [
                                  "
  height: 1rem;
  width: 1rem;
  background: red;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-ifAKCX",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-ifAKCX ggpBGU"
                          />
                        </StyledComponent>
                      </styled.div>
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bxivhb",
                                "isStatic": false,
                                "lastClassName": "kljkxx",
                                "rules": Array [
                                  "
	height: 5rem;
	width: 1rem;
	background: #915535;
  cursor: pointer;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bxivhb",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-bxivhb kljkxx"
                          />
                        </StyledComponent>
                      </styled.div>
                    </div>
                  </StyledComponent>
                </styled.div>
              </_default>
              <_default
                key="8"
                matchNumber={8}
                onClick={[Function]}
                visible={true}
              >
                <styled.div
                  onClick={[Function]}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "egiyvg",
                          "rules": Array [
                            "
	height: 8rem;
	width: 4rem;
	cursor: pointer;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: #243d39;

  @media (min-width: 900px) {
    &:hover {
      background: #335751;
    }
  }
  
  @media (max-width: 600px) {
    height: 90%;
  }
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "usesTheme": false,
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                  >
                    <div
                      className="sc-htpNat egiyvg"
                      onClick={[Function]}
                    >
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-ifAKCX",
                                "isStatic": false,
                                "lastClassName": "ggpBGU",
                                "rules": Array [
                                  "
  height: 1rem;
  width: 1rem;
  background: red;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-ifAKCX",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-ifAKCX ggpBGU"
                          />
                        </StyledComponent>
                      </styled.div>
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bxivhb",
                                "isStatic": false,
                                "lastClassName": "kljkxx",
                                "rules": Array [
                                  "
	height: 5rem;
	width: 1rem;
	background: #915535;
  cursor: pointer;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bxivhb",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-bxivhb kljkxx"
                          />
                        </StyledComponent>
                      </styled.div>
                    </div>
                  </StyledComponent>
                </styled.div>
              </_default>
              <_default
                key="9"
                matchNumber={9}
                onClick={[Function]}
                visible={true}
              >
                <styled.div
                  onClick={[Function]}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "egiyvg",
                          "rules": Array [
                            "
	height: 8rem;
	width: 4rem;
	cursor: pointer;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: #243d39;

  @media (min-width: 900px) {
    &:hover {
      background: #335751;
    }
  }
  
  @media (max-width: 600px) {
    height: 90%;
  }
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "usesTheme": false,
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                  >
                    <div
                      className="sc-htpNat egiyvg"
                      onClick={[Function]}
                    >
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-ifAKCX",
                                "isStatic": false,
                                "lastClassName": "ggpBGU",
                                "rules": Array [
                                  "
  height: 1rem;
  width: 1rem;
  background: red;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-ifAKCX",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-ifAKCX ggpBGU"
                          />
                        </StyledComponent>
                      </styled.div>
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bxivhb",
                                "isStatic": false,
                                "lastClassName": "kljkxx",
                                "rules": Array [
                                  "
	height: 5rem;
	width: 1rem;
	background: #915535;
  cursor: pointer;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bxivhb",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-bxivhb kljkxx"
                          />
                        </StyledComponent>
                      </styled.div>
                    </div>
                  </StyledComponent>
                </styled.div>
              </_default>
              <_default
                key="10"
                matchNumber={10}
                onClick={[Function]}
                visible={true}
              >
                <styled.div
                  onClick={[Function]}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "egiyvg",
                          "rules": Array [
                            "
	height: 8rem;
	width: 4rem;
	cursor: pointer;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: #243d39;

  @media (min-width: 900px) {
    &:hover {
      background: #335751;
    }
  }
  
  @media (max-width: 600px) {
    height: 90%;
  }
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "usesTheme": false,
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                  >
                    <div
                      className="sc-htpNat egiyvg"
                      onClick={[Function]}
                    >
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-ifAKCX",
                                "isStatic": false,
                                "lastClassName": "ggpBGU",
                                "rules": Array [
                                  "
  height: 1rem;
  width: 1rem;
  background: red;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-ifAKCX",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-ifAKCX ggpBGU"
                          />
                        </StyledComponent>
                      </styled.div>
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bxivhb",
                                "isStatic": false,
                                "lastClassName": "kljkxx",
                                "rules": Array [
                                  "
	height: 5rem;
	width: 1rem;
	background: #915535;
  cursor: pointer;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bxivhb",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-bxivhb kljkxx"
                          />
                        </StyledComponent>
                      </styled.div>
                    </div>
                  </StyledComponent>
                </styled.div>
              </_default>
              <_default
                key="11"
                matchNumber={11}
                onClick={[Function]}
                visible={true}
              >
                <styled.div
                  onClick={[Function]}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "egiyvg",
                          "rules": Array [
                            "
	height: 8rem;
	width: 4rem;
	cursor: pointer;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: #243d39;

  @media (min-width: 900px) {
    &:hover {
      background: #335751;
    }
  }
  
  @media (max-width: 600px) {
    height: 90%;
  }
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "usesTheme": false,
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                  >
                    <div
                      className="sc-htpNat egiyvg"
                      onClick={[Function]}
                    >
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-ifAKCX",
                                "isStatic": false,
                                "lastClassName": "ggpBGU",
                                "rules": Array [
                                  "
  height: 1rem;
  width: 1rem;
  background: red;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-ifAKCX",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-ifAKCX ggpBGU"
                          />
                        </StyledComponent>
                      </styled.div>
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bxivhb",
                                "isStatic": false,
                                "lastClassName": "kljkxx",
                                "rules": Array [
                                  "
	height: 5rem;
	width: 1rem;
	background: #915535;
  cursor: pointer;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bxivhb",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-bxivhb kljkxx"
                          />
                        </StyledComponent>
                      </styled.div>
                    </div>
                  </StyledComponent>
                </styled.div>
              </_default>
              <_default
                key="12"
                matchNumber={12}
                onClick={[Function]}
                visible={true}
              >
                <styled.div
                  onClick={[Function]}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "egiyvg",
                          "rules": Array [
                            "
	height: 8rem;
	width: 4rem;
	cursor: pointer;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: #243d39;

  @media (min-width: 900px) {
    &:hover {
      background: #335751;
    }
  }
  
  @media (max-width: 600px) {
    height: 90%;
  }
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "usesTheme": false,
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                  >
                    <div
                      className="sc-htpNat egiyvg"
                      onClick={[Function]}
                    >
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-ifAKCX",
                                "isStatic": false,
                                "lastClassName": "ggpBGU",
                                "rules": Array [
                                  "
  height: 1rem;
  width: 1rem;
  background: red;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-ifAKCX",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-ifAKCX ggpBGU"
                          />
                        </StyledComponent>
                      </styled.div>
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bxivhb",
                                "isStatic": false,
                                "lastClassName": "kljkxx",
                                "rules": Array [
                                  "
	height: 5rem;
	width: 1rem;
	background: #915535;
  cursor: pointer;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bxivhb",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-bxivhb kljkxx"
                          />
                        </StyledComponent>
                      </styled.div>
                    </div>
                  </StyledComponent>
                </styled.div>
              </_default>
            </div>
          </StyledComponent>
        </styled.div>
        <_default
          handleFinishTurn={[Function]}
          matchesSelectedState={
            Array [
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
            ]
          }
          userIsCurrentPlayer={true}
        >
          <styled.div>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-EHOje",
                    "isStatic": false,
                    "lastClassName": "irlFoH",
                    "rules": Array [
                      "
  height: 20%;
	width: 100%;
	color: white;
	font-size: 2rem;
	display: flex;
	align-items: center;
	flex-direction: column;
	justify-content: space-around;
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-EHOje",
                  "target": "div",
                  "toString": [Function],
                  "usesTheme": false,
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="sc-EHOje irlFoH"
              >
                <styled.button
                  onClick={[Function]}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bZQynM",
                          "isStatic": false,
                          "lastClassName": "bRghQs",
                          "rules": Array [
                            "
	height: 4rem;
	width: 8rem;
	color: white;
	background: none;
	font-weight: bold;
	cursor: pointer;
	text-transform: uppercase;
",
                          ],
                        },
                        "displayName": "styled.button",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bZQynM",
                        "target": "button",
                        "toString": [Function],
                        "usesTheme": false,
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                  >
                    <button
                      className="sc-bZQynM bRghQs"
                      onClick={[Function]}
                    >
                      Finish Turn
                    </button>
                  </StyledComponent>
                </styled.button>
                <p>
                  Player: 
                </p>
                User
              </div>
            </StyledComponent>
          </styled.div>
        </_default>
      </div>
    </StyledComponent>
  </styled.div>
</App>
`;
