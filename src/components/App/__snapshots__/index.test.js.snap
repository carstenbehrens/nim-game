// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App matches snapshot 1`] = `
<App>
  <styled.div>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "frPoUF",
            "rules": Array [
              "
	height: 100vh;
	width: 100vw;
  background: linear-gradient(to bottom, rgba(255,255,255,0.15) 0%, rgba(0,0,0,0.15) 100%), radial-gradient(at top center, rgba(255,255,255,0.40) 0%, rgba(0,0,0,0.40) 120%) #989898; 
  background-blend-mode: multiply,multiply;
	display: flex;
	align-items: center;
  flex-direction: column;
  justify-content: space-between;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "usesTheme": false,
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="sc-bdVaJa frPoUF"
      >
        <GlobalStyleComponent />
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "sRfCT",
                  "rules": Array [
                    "
	display: flex;
	justify-content: space-between;
	align-items: center;
	height: 70%;
	width: 90%;

	@media (max-width: 900px) {
		display: grid;
		grid-template-columns: repeat(3, 1fr);
		place-items: center;
  }
  
  @media (max-width: 600px) {
    width: 100%;
  }

  @media (max-width: 400px) {
    grid-template-columns: repeat(4, 1fr); 
  }
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": "div",
                "toString": [Function],
                "usesTheme": false,
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="sc-bwzfXH sRfCT"
            >
              <_default
                key="0"
                number={0}
                onClick={[Function]}
                visible={true}
              >
                <styled.div
                  onClick={[Function]}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "PSgIe",
                          "rules": Array [
                            "
	height: 8rem;
	width: 4rem;
	cursor: pointer;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(255,255,255,0.1) 100%);
  border-radius: 3rem;

  @media (min-width: 900px) {
    &:hover {
      background: linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(255,255,255,0.3) 100%);
    }
  }
  
  @media (max-width: 600px) {
    height: 90%;
  }
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "usesTheme": false,
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                  >
                    <div
                      className="sc-htpNat PSgIe"
                      onClick={[Function]}
                    >
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-ifAKCX",
                                "isStatic": false,
                                "lastClassName": "fUoITb",
                                "rules": Array [
                                  "
  height: 1.4rem;
  width: 1rem;
  border-radius: 40%;
  background: rgb(89,21,12);
  background: linear-gradient(126deg, rgba(89,21,12,1) 0%, rgba(238,141,101,1) 0%, rgba(193,104,66,1) 37%, rgba(213,49,28,1) 39%, rgba(71,19,12,1) 100%);
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-ifAKCX",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-ifAKCX fUoITb"
                          />
                        </StyledComponent>
                      </styled.div>
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bxivhb",
                                "isStatic": false,
                                "lastClassName": "bgyMHR",
                                "rules": Array [
                                  "
	height: 5rem;
	width: 0.6rem;
	background: rgb(224,175,76);
  background: linear-gradient(270deg, rgba(224,175,76,1) 0%, rgba(224,175,76,1) 50%, rgba(230,186,102,1) 50%, rgba(237,201,136,1) 100%);
  cursor: pointer;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bxivhb",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-bxivhb bgyMHR"
                          />
                        </StyledComponent>
                      </styled.div>
                    </div>
                  </StyledComponent>
                </styled.div>
              </_default>
              <_default
                key="1"
                number={1}
                onClick={[Function]}
                visible={true}
              >
                <styled.div
                  onClick={[Function]}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "PSgIe",
                          "rules": Array [
                            "
	height: 8rem;
	width: 4rem;
	cursor: pointer;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(255,255,255,0.1) 100%);
  border-radius: 3rem;

  @media (min-width: 900px) {
    &:hover {
      background: linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(255,255,255,0.3) 100%);
    }
  }
  
  @media (max-width: 600px) {
    height: 90%;
  }
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "usesTheme": false,
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                  >
                    <div
                      className="sc-htpNat PSgIe"
                      onClick={[Function]}
                    >
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-ifAKCX",
                                "isStatic": false,
                                "lastClassName": "fUoITb",
                                "rules": Array [
                                  "
  height: 1.4rem;
  width: 1rem;
  border-radius: 40%;
  background: rgb(89,21,12);
  background: linear-gradient(126deg, rgba(89,21,12,1) 0%, rgba(238,141,101,1) 0%, rgba(193,104,66,1) 37%, rgba(213,49,28,1) 39%, rgba(71,19,12,1) 100%);
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-ifAKCX",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-ifAKCX fUoITb"
                          />
                        </StyledComponent>
                      </styled.div>
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bxivhb",
                                "isStatic": false,
                                "lastClassName": "bgyMHR",
                                "rules": Array [
                                  "
	height: 5rem;
	width: 0.6rem;
	background: rgb(224,175,76);
  background: linear-gradient(270deg, rgba(224,175,76,1) 0%, rgba(224,175,76,1) 50%, rgba(230,186,102,1) 50%, rgba(237,201,136,1) 100%);
  cursor: pointer;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bxivhb",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-bxivhb bgyMHR"
                          />
                        </StyledComponent>
                      </styled.div>
                    </div>
                  </StyledComponent>
                </styled.div>
              </_default>
              <_default
                key="2"
                number={2}
                onClick={[Function]}
                visible={true}
              >
                <styled.div
                  onClick={[Function]}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "PSgIe",
                          "rules": Array [
                            "
	height: 8rem;
	width: 4rem;
	cursor: pointer;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(255,255,255,0.1) 100%);
  border-radius: 3rem;

  @media (min-width: 900px) {
    &:hover {
      background: linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(255,255,255,0.3) 100%);
    }
  }
  
  @media (max-width: 600px) {
    height: 90%;
  }
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "usesTheme": false,
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                  >
                    <div
                      className="sc-htpNat PSgIe"
                      onClick={[Function]}
                    >
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-ifAKCX",
                                "isStatic": false,
                                "lastClassName": "fUoITb",
                                "rules": Array [
                                  "
  height: 1.4rem;
  width: 1rem;
  border-radius: 40%;
  background: rgb(89,21,12);
  background: linear-gradient(126deg, rgba(89,21,12,1) 0%, rgba(238,141,101,1) 0%, rgba(193,104,66,1) 37%, rgba(213,49,28,1) 39%, rgba(71,19,12,1) 100%);
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-ifAKCX",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-ifAKCX fUoITb"
                          />
                        </StyledComponent>
                      </styled.div>
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bxivhb",
                                "isStatic": false,
                                "lastClassName": "bgyMHR",
                                "rules": Array [
                                  "
	height: 5rem;
	width: 0.6rem;
	background: rgb(224,175,76);
  background: linear-gradient(270deg, rgba(224,175,76,1) 0%, rgba(224,175,76,1) 50%, rgba(230,186,102,1) 50%, rgba(237,201,136,1) 100%);
  cursor: pointer;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bxivhb",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-bxivhb bgyMHR"
                          />
                        </StyledComponent>
                      </styled.div>
                    </div>
                  </StyledComponent>
                </styled.div>
              </_default>
              <_default
                key="3"
                number={3}
                onClick={[Function]}
                visible={true}
              >
                <styled.div
                  onClick={[Function]}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "PSgIe",
                          "rules": Array [
                            "
	height: 8rem;
	width: 4rem;
	cursor: pointer;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(255,255,255,0.1) 100%);
  border-radius: 3rem;

  @media (min-width: 900px) {
    &:hover {
      background: linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(255,255,255,0.3) 100%);
    }
  }
  
  @media (max-width: 600px) {
    height: 90%;
  }
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "usesTheme": false,
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                  >
                    <div
                      className="sc-htpNat PSgIe"
                      onClick={[Function]}
                    >
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-ifAKCX",
                                "isStatic": false,
                                "lastClassName": "fUoITb",
                                "rules": Array [
                                  "
  height: 1.4rem;
  width: 1rem;
  border-radius: 40%;
  background: rgb(89,21,12);
  background: linear-gradient(126deg, rgba(89,21,12,1) 0%, rgba(238,141,101,1) 0%, rgba(193,104,66,1) 37%, rgba(213,49,28,1) 39%, rgba(71,19,12,1) 100%);
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-ifAKCX",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-ifAKCX fUoITb"
                          />
                        </StyledComponent>
                      </styled.div>
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bxivhb",
                                "isStatic": false,
                                "lastClassName": "bgyMHR",
                                "rules": Array [
                                  "
	height: 5rem;
	width: 0.6rem;
	background: rgb(224,175,76);
  background: linear-gradient(270deg, rgba(224,175,76,1) 0%, rgba(224,175,76,1) 50%, rgba(230,186,102,1) 50%, rgba(237,201,136,1) 100%);
  cursor: pointer;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bxivhb",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-bxivhb bgyMHR"
                          />
                        </StyledComponent>
                      </styled.div>
                    </div>
                  </StyledComponent>
                </styled.div>
              </_default>
              <_default
                key="4"
                number={4}
                onClick={[Function]}
                visible={true}
              >
                <styled.div
                  onClick={[Function]}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "PSgIe",
                          "rules": Array [
                            "
	height: 8rem;
	width: 4rem;
	cursor: pointer;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(255,255,255,0.1) 100%);
  border-radius: 3rem;

  @media (min-width: 900px) {
    &:hover {
      background: linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(255,255,255,0.3) 100%);
    }
  }
  
  @media (max-width: 600px) {
    height: 90%;
  }
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "usesTheme": false,
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                  >
                    <div
                      className="sc-htpNat PSgIe"
                      onClick={[Function]}
                    >
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-ifAKCX",
                                "isStatic": false,
                                "lastClassName": "fUoITb",
                                "rules": Array [
                                  "
  height: 1.4rem;
  width: 1rem;
  border-radius: 40%;
  background: rgb(89,21,12);
  background: linear-gradient(126deg, rgba(89,21,12,1) 0%, rgba(238,141,101,1) 0%, rgba(193,104,66,1) 37%, rgba(213,49,28,1) 39%, rgba(71,19,12,1) 100%);
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-ifAKCX",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-ifAKCX fUoITb"
                          />
                        </StyledComponent>
                      </styled.div>
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bxivhb",
                                "isStatic": false,
                                "lastClassName": "bgyMHR",
                                "rules": Array [
                                  "
	height: 5rem;
	width: 0.6rem;
	background: rgb(224,175,76);
  background: linear-gradient(270deg, rgba(224,175,76,1) 0%, rgba(224,175,76,1) 50%, rgba(230,186,102,1) 50%, rgba(237,201,136,1) 100%);
  cursor: pointer;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bxivhb",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-bxivhb bgyMHR"
                          />
                        </StyledComponent>
                      </styled.div>
                    </div>
                  </StyledComponent>
                </styled.div>
              </_default>
              <_default
                key="5"
                number={5}
                onClick={[Function]}
                visible={true}
              >
                <styled.div
                  onClick={[Function]}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "PSgIe",
                          "rules": Array [
                            "
	height: 8rem;
	width: 4rem;
	cursor: pointer;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(255,255,255,0.1) 100%);
  border-radius: 3rem;

  @media (min-width: 900px) {
    &:hover {
      background: linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(255,255,255,0.3) 100%);
    }
  }
  
  @media (max-width: 600px) {
    height: 90%;
  }
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "usesTheme": false,
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                  >
                    <div
                      className="sc-htpNat PSgIe"
                      onClick={[Function]}
                    >
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-ifAKCX",
                                "isStatic": false,
                                "lastClassName": "fUoITb",
                                "rules": Array [
                                  "
  height: 1.4rem;
  width: 1rem;
  border-radius: 40%;
  background: rgb(89,21,12);
  background: linear-gradient(126deg, rgba(89,21,12,1) 0%, rgba(238,141,101,1) 0%, rgba(193,104,66,1) 37%, rgba(213,49,28,1) 39%, rgba(71,19,12,1) 100%);
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-ifAKCX",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-ifAKCX fUoITb"
                          />
                        </StyledComponent>
                      </styled.div>
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bxivhb",
                                "isStatic": false,
                                "lastClassName": "bgyMHR",
                                "rules": Array [
                                  "
	height: 5rem;
	width: 0.6rem;
	background: rgb(224,175,76);
  background: linear-gradient(270deg, rgba(224,175,76,1) 0%, rgba(224,175,76,1) 50%, rgba(230,186,102,1) 50%, rgba(237,201,136,1) 100%);
  cursor: pointer;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bxivhb",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-bxivhb bgyMHR"
                          />
                        </StyledComponent>
                      </styled.div>
                    </div>
                  </StyledComponent>
                </styled.div>
              </_default>
              <_default
                key="6"
                number={6}
                onClick={[Function]}
                visible={true}
              >
                <styled.div
                  onClick={[Function]}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "PSgIe",
                          "rules": Array [
                            "
	height: 8rem;
	width: 4rem;
	cursor: pointer;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(255,255,255,0.1) 100%);
  border-radius: 3rem;

  @media (min-width: 900px) {
    &:hover {
      background: linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(255,255,255,0.3) 100%);
    }
  }
  
  @media (max-width: 600px) {
    height: 90%;
  }
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "usesTheme": false,
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                  >
                    <div
                      className="sc-htpNat PSgIe"
                      onClick={[Function]}
                    >
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-ifAKCX",
                                "isStatic": false,
                                "lastClassName": "fUoITb",
                                "rules": Array [
                                  "
  height: 1.4rem;
  width: 1rem;
  border-radius: 40%;
  background: rgb(89,21,12);
  background: linear-gradient(126deg, rgba(89,21,12,1) 0%, rgba(238,141,101,1) 0%, rgba(193,104,66,1) 37%, rgba(213,49,28,1) 39%, rgba(71,19,12,1) 100%);
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-ifAKCX",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-ifAKCX fUoITb"
                          />
                        </StyledComponent>
                      </styled.div>
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bxivhb",
                                "isStatic": false,
                                "lastClassName": "bgyMHR",
                                "rules": Array [
                                  "
	height: 5rem;
	width: 0.6rem;
	background: rgb(224,175,76);
  background: linear-gradient(270deg, rgba(224,175,76,1) 0%, rgba(224,175,76,1) 50%, rgba(230,186,102,1) 50%, rgba(237,201,136,1) 100%);
  cursor: pointer;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bxivhb",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-bxivhb bgyMHR"
                          />
                        </StyledComponent>
                      </styled.div>
                    </div>
                  </StyledComponent>
                </styled.div>
              </_default>
              <_default
                key="7"
                number={7}
                onClick={[Function]}
                visible={true}
              >
                <styled.div
                  onClick={[Function]}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "PSgIe",
                          "rules": Array [
                            "
	height: 8rem;
	width: 4rem;
	cursor: pointer;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(255,255,255,0.1) 100%);
  border-radius: 3rem;

  @media (min-width: 900px) {
    &:hover {
      background: linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(255,255,255,0.3) 100%);
    }
  }
  
  @media (max-width: 600px) {
    height: 90%;
  }
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "usesTheme": false,
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                  >
                    <div
                      className="sc-htpNat PSgIe"
                      onClick={[Function]}
                    >
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-ifAKCX",
                                "isStatic": false,
                                "lastClassName": "fUoITb",
                                "rules": Array [
                                  "
  height: 1.4rem;
  width: 1rem;
  border-radius: 40%;
  background: rgb(89,21,12);
  background: linear-gradient(126deg, rgba(89,21,12,1) 0%, rgba(238,141,101,1) 0%, rgba(193,104,66,1) 37%, rgba(213,49,28,1) 39%, rgba(71,19,12,1) 100%);
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-ifAKCX",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-ifAKCX fUoITb"
                          />
                        </StyledComponent>
                      </styled.div>
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bxivhb",
                                "isStatic": false,
                                "lastClassName": "bgyMHR",
                                "rules": Array [
                                  "
	height: 5rem;
	width: 0.6rem;
	background: rgb(224,175,76);
  background: linear-gradient(270deg, rgba(224,175,76,1) 0%, rgba(224,175,76,1) 50%, rgba(230,186,102,1) 50%, rgba(237,201,136,1) 100%);
  cursor: pointer;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bxivhb",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-bxivhb bgyMHR"
                          />
                        </StyledComponent>
                      </styled.div>
                    </div>
                  </StyledComponent>
                </styled.div>
              </_default>
              <_default
                key="8"
                number={8}
                onClick={[Function]}
                visible={true}
              >
                <styled.div
                  onClick={[Function]}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "PSgIe",
                          "rules": Array [
                            "
	height: 8rem;
	width: 4rem;
	cursor: pointer;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(255,255,255,0.1) 100%);
  border-radius: 3rem;

  @media (min-width: 900px) {
    &:hover {
      background: linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(255,255,255,0.3) 100%);
    }
  }
  
  @media (max-width: 600px) {
    height: 90%;
  }
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "usesTheme": false,
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                  >
                    <div
                      className="sc-htpNat PSgIe"
                      onClick={[Function]}
                    >
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-ifAKCX",
                                "isStatic": false,
                                "lastClassName": "fUoITb",
                                "rules": Array [
                                  "
  height: 1.4rem;
  width: 1rem;
  border-radius: 40%;
  background: rgb(89,21,12);
  background: linear-gradient(126deg, rgba(89,21,12,1) 0%, rgba(238,141,101,1) 0%, rgba(193,104,66,1) 37%, rgba(213,49,28,1) 39%, rgba(71,19,12,1) 100%);
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-ifAKCX",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-ifAKCX fUoITb"
                          />
                        </StyledComponent>
                      </styled.div>
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bxivhb",
                                "isStatic": false,
                                "lastClassName": "bgyMHR",
                                "rules": Array [
                                  "
	height: 5rem;
	width: 0.6rem;
	background: rgb(224,175,76);
  background: linear-gradient(270deg, rgba(224,175,76,1) 0%, rgba(224,175,76,1) 50%, rgba(230,186,102,1) 50%, rgba(237,201,136,1) 100%);
  cursor: pointer;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bxivhb",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-bxivhb bgyMHR"
                          />
                        </StyledComponent>
                      </styled.div>
                    </div>
                  </StyledComponent>
                </styled.div>
              </_default>
              <_default
                key="9"
                number={9}
                onClick={[Function]}
                visible={true}
              >
                <styled.div
                  onClick={[Function]}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "PSgIe",
                          "rules": Array [
                            "
	height: 8rem;
	width: 4rem;
	cursor: pointer;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(255,255,255,0.1) 100%);
  border-radius: 3rem;

  @media (min-width: 900px) {
    &:hover {
      background: linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(255,255,255,0.3) 100%);
    }
  }
  
  @media (max-width: 600px) {
    height: 90%;
  }
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "usesTheme": false,
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                  >
                    <div
                      className="sc-htpNat PSgIe"
                      onClick={[Function]}
                    >
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-ifAKCX",
                                "isStatic": false,
                                "lastClassName": "fUoITb",
                                "rules": Array [
                                  "
  height: 1.4rem;
  width: 1rem;
  border-radius: 40%;
  background: rgb(89,21,12);
  background: linear-gradient(126deg, rgba(89,21,12,1) 0%, rgba(238,141,101,1) 0%, rgba(193,104,66,1) 37%, rgba(213,49,28,1) 39%, rgba(71,19,12,1) 100%);
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-ifAKCX",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-ifAKCX fUoITb"
                          />
                        </StyledComponent>
                      </styled.div>
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bxivhb",
                                "isStatic": false,
                                "lastClassName": "bgyMHR",
                                "rules": Array [
                                  "
	height: 5rem;
	width: 0.6rem;
	background: rgb(224,175,76);
  background: linear-gradient(270deg, rgba(224,175,76,1) 0%, rgba(224,175,76,1) 50%, rgba(230,186,102,1) 50%, rgba(237,201,136,1) 100%);
  cursor: pointer;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bxivhb",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-bxivhb bgyMHR"
                          />
                        </StyledComponent>
                      </styled.div>
                    </div>
                  </StyledComponent>
                </styled.div>
              </_default>
              <_default
                key="10"
                number={10}
                onClick={[Function]}
                visible={true}
              >
                <styled.div
                  onClick={[Function]}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "PSgIe",
                          "rules": Array [
                            "
	height: 8rem;
	width: 4rem;
	cursor: pointer;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(255,255,255,0.1) 100%);
  border-radius: 3rem;

  @media (min-width: 900px) {
    &:hover {
      background: linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(255,255,255,0.3) 100%);
    }
  }
  
  @media (max-width: 600px) {
    height: 90%;
  }
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "usesTheme": false,
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                  >
                    <div
                      className="sc-htpNat PSgIe"
                      onClick={[Function]}
                    >
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-ifAKCX",
                                "isStatic": false,
                                "lastClassName": "fUoITb",
                                "rules": Array [
                                  "
  height: 1.4rem;
  width: 1rem;
  border-radius: 40%;
  background: rgb(89,21,12);
  background: linear-gradient(126deg, rgba(89,21,12,1) 0%, rgba(238,141,101,1) 0%, rgba(193,104,66,1) 37%, rgba(213,49,28,1) 39%, rgba(71,19,12,1) 100%);
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-ifAKCX",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-ifAKCX fUoITb"
                          />
                        </StyledComponent>
                      </styled.div>
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bxivhb",
                                "isStatic": false,
                                "lastClassName": "bgyMHR",
                                "rules": Array [
                                  "
	height: 5rem;
	width: 0.6rem;
	background: rgb(224,175,76);
  background: linear-gradient(270deg, rgba(224,175,76,1) 0%, rgba(224,175,76,1) 50%, rgba(230,186,102,1) 50%, rgba(237,201,136,1) 100%);
  cursor: pointer;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bxivhb",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-bxivhb bgyMHR"
                          />
                        </StyledComponent>
                      </styled.div>
                    </div>
                  </StyledComponent>
                </styled.div>
              </_default>
              <_default
                key="11"
                number={11}
                onClick={[Function]}
                visible={true}
              >
                <styled.div
                  onClick={[Function]}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "PSgIe",
                          "rules": Array [
                            "
	height: 8rem;
	width: 4rem;
	cursor: pointer;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(255,255,255,0.1) 100%);
  border-radius: 3rem;

  @media (min-width: 900px) {
    &:hover {
      background: linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(255,255,255,0.3) 100%);
    }
  }
  
  @media (max-width: 600px) {
    height: 90%;
  }
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "usesTheme": false,
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                  >
                    <div
                      className="sc-htpNat PSgIe"
                      onClick={[Function]}
                    >
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-ifAKCX",
                                "isStatic": false,
                                "lastClassName": "fUoITb",
                                "rules": Array [
                                  "
  height: 1.4rem;
  width: 1rem;
  border-radius: 40%;
  background: rgb(89,21,12);
  background: linear-gradient(126deg, rgba(89,21,12,1) 0%, rgba(238,141,101,1) 0%, rgba(193,104,66,1) 37%, rgba(213,49,28,1) 39%, rgba(71,19,12,1) 100%);
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-ifAKCX",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-ifAKCX fUoITb"
                          />
                        </StyledComponent>
                      </styled.div>
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bxivhb",
                                "isStatic": false,
                                "lastClassName": "bgyMHR",
                                "rules": Array [
                                  "
	height: 5rem;
	width: 0.6rem;
	background: rgb(224,175,76);
  background: linear-gradient(270deg, rgba(224,175,76,1) 0%, rgba(224,175,76,1) 50%, rgba(230,186,102,1) 50%, rgba(237,201,136,1) 100%);
  cursor: pointer;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bxivhb",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-bxivhb bgyMHR"
                          />
                        </StyledComponent>
                      </styled.div>
                    </div>
                  </StyledComponent>
                </styled.div>
              </_default>
              <_default
                key="12"
                number={12}
                onClick={[Function]}
                visible={true}
              >
                <styled.div
                  onClick={[Function]}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "PSgIe",
                          "rules": Array [
                            "
	height: 8rem;
	width: 4rem;
	cursor: pointer;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(255,255,255,0.1) 100%);
  border-radius: 3rem;

  @media (min-width: 900px) {
    &:hover {
      background: linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(255,255,255,0.3) 100%);
    }
  }
  
  @media (max-width: 600px) {
    height: 90%;
  }
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "usesTheme": false,
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                  >
                    <div
                      className="sc-htpNat PSgIe"
                      onClick={[Function]}
                    >
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-ifAKCX",
                                "isStatic": false,
                                "lastClassName": "fUoITb",
                                "rules": Array [
                                  "
  height: 1.4rem;
  width: 1rem;
  border-radius: 40%;
  background: rgb(89,21,12);
  background: linear-gradient(126deg, rgba(89,21,12,1) 0%, rgba(238,141,101,1) 0%, rgba(193,104,66,1) 37%, rgba(213,49,28,1) 39%, rgba(71,19,12,1) 100%);
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-ifAKCX",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-ifAKCX fUoITb"
                          />
                        </StyledComponent>
                      </styled.div>
                      <styled.div
                        visible={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bxivhb",
                                "isStatic": false,
                                "lastClassName": "bgyMHR",
                                "rules": Array [
                                  "
	height: 5rem;
	width: 0.6rem;
	background: rgb(224,175,76);
  background: linear-gradient(270deg, rgba(224,175,76,1) 0%, rgba(224,175,76,1) 50%, rgba(230,186,102,1) 50%, rgba(237,201,136,1) 100%);
  cursor: pointer;
  opacity: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bxivhb",
                              "target": "div",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          visible={true}
                        >
                          <div
                            className="sc-bxivhb bgyMHR"
                          />
                        </StyledComponent>
                      </styled.div>
                    </div>
                  </StyledComponent>
                </styled.div>
              </_default>
            </div>
          </StyledComponent>
        </styled.div>
        <_default
          handleFinishTurn={[Function]}
          matches={
            Array [
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
            ]
          }
          userIsCurrentPlayer={true}
        >
          <styled.div>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-EHOje",
                    "isStatic": false,
                    "lastClassName": "irlFoH",
                    "rules": Array [
                      "
  height: 20%;
	width: 100%;
	color: white;
	font-size: 2rem;
	display: flex;
	align-items: center;
	flex-direction: column;
	justify-content: space-around;
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-EHOje",
                  "target": "div",
                  "toString": [Function],
                  "usesTheme": false,
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="sc-EHOje irlFoH"
              >
                <styled.button
                  onClick={[Function]}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bZQynM",
                          "isStatic": false,
                          "lastClassName": "bRghQs",
                          "rules": Array [
                            "
	height: 4rem;
	width: 8rem;
	color: white;
	background: none;
	font-weight: bold;
	cursor: pointer;
	text-transform: uppercase;
",
                          ],
                        },
                        "displayName": "styled.button",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bZQynM",
                        "target": "button",
                        "toString": [Function],
                        "usesTheme": false,
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                  >
                    <button
                      className="sc-bZQynM bRghQs"
                      onClick={[Function]}
                    >
                      Finish Turn
                    </button>
                  </StyledComponent>
                </styled.button>
                <p>
                  Player: 
                </p>
                User
              </div>
            </StyledComponent>
          </styled.div>
        </_default>
      </div>
    </StyledComponent>
  </styled.div>
</App>
`;
